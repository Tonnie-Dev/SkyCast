name: Deploy SkyCast
on:
   workflow_dispatch:

# Job 1 - Build Signed AAB

jobs:
   build:
      name: Job 1 - Build Signed AAB
      runs-on: ubuntu-latest
      steps:
         
         # Step 1 - Checkout the repository, making it available to the workflow:
         -  uses: actions/checkout@v3
         
         # Step 2 - Read Keystore from GitHub Secrets, decrypt from base64 string and
         # avail it to the workflow - place it in a temporary folder
#         -  name: Decode Keystore
#            env:
#               ENCODED_STRING: ${{ secrets.KEYSTORE }}
#            run: >
#               TMP_KEYSTORE_FILE_PATH="${RUNNER_TEMP}"/keystore
#
#               mkdir "${TMP_KEYSTORE_FILE_PATH}"
#
#               echo $ENCODED_STRING | base64 -di > "${TMP_KEYSTORE_FILE_PATH}"/your_keystore_file.jks
         
         # Step 3 - retrieves the contents of API_KEY_PROPERTIES secret from GitHub Secrets
         # and save it as apikey.properties file in the workflow workspace.
         
         -  name: Get apikey.properties from secrets
            run: echo "${{ secrets.API_KEY_PROPERTIES }}" > $GITHUB_WORKSPACE/apikey.properties
            
         
         # Step 4 - Setup Java
         -  name: Setup JDK 18
            uses: actions/setup-java@v3
            with:
               distribution: temurin
               java-version: 18
         
         # Step 5 - Setup Gradle to allow workflow access and execute Gradlew file
         -  name: Make gradlew executable
            run: chmod +x ./gradlew
         
         # Step 6 - Setup Gradle Cache to improve the speed of the workflows
         -  name: Setup Gradle Cache
            uses: gradle/gradle-build-action@v2
            with:
               gradle-home-cache-cleanup: true
         
         # Step 7 - Override the version code and version name
         -  name: Bump Version Code
            uses: chkfung/android-version-actions@v1.2.1
            with:
               gradlePath: app/build.gradle.kts
               versionCode: ${{ github.run_number }}
               versionName: 1.0.0
      # Step 7 - Update VersionCode and VersionName
         -  name: Update VersionCode and VersionName
            run: |
               sed -i 's/\(versionCode[[:space:]]*=[[:space:]]*\)[0-9]*/\1NEW_VERSION_CODE/' build.gradle.kts
               sed -i 's/\(versionName[[:space:]]*=[[:space:]]*"[^"]*"[[:space:]]*\)[^"]*/\1"NEW_VERSION_NAME"/' build.gradle.kts
            env:
               NEW_VERSION_CODE: ${{ github.run_number }}
               NEW_VERSION_NAME: v${{ github.run_number }}
            
            
         # Step 8 - Build Production App Bundle
         -  name: Build prodRelease
            run: ./gradlew bundleRelease
         
#         # Step 9 - Sign AAB
         -  name: Sign AAb
            id: sign
            uses: r0adkll/sign-android-release@v1
            with:
               releaseDirectory: app/build/outputs/bundle/release
               signingKeyBase64: ${{ secrets.KEYSTORE }}
               alias: ${{ secrets.SIGNING_KEY_ALIAS }}
               keyStorePassword: ${{ secrets.SIGNING_STORE_PASSWORD }}
               keyPassword: ${{ secrets.SIGNING_KEY_PASSWORD }}
         
       
         
         # Step 10 - Save AAB after Build job is complete to publish it as a Github release in the next job
         -  name: Upload app bundle as artifact
            uses: actions/upload-artifact@v2
            with:
               name: app-bundle
               path: app/build/outputs/bundle/release/app-release.aab
         
         # Step 11 - Print out the Job Status
         -  run: echo Build status report=${{ job.status }}
   
   # Job 2 - Deploy to Playstore
   deploy:
      needs: build
      runs-on: ubuntu-latest
      steps:
         # Step 1 - Checkout
         -  uses: actions/checkout@v3
         -  name: Download app bundle from artifact
            uses: actions/download-artifact@v2
            with:
               name: app-bundle
         
         # Step 2 - Upload the AAB to play console
         -  name: Publish to Play Store
            uses: r0adkll/upload-google-play@v1
            with:
               serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
               packageName: com.uxstate.skycast
               releaseFiles: ${{ github.workspace }}/app-release.aab
               track: production







   